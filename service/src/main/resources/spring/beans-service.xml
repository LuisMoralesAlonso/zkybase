<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:neo4j="http://www.springframework.org/schema/data/neo4j"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
		http://www.springframework.org/schema/data/neo4j http://www.springframework.org/schema/data/neo4j/spring-neo4j-2.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.1.xsd">
	
	<context:property-placeholder location="classpath:/spring/environment.properties" />
	<util:properties id="config" location="classpath:/spring/environment.properties" />
	
	<context:annotation-config />
<!-- 	<context:spring-configured /> -->

	<neo4j:config storeDirectory="${graphDb.dir}" />
	
	<neo4j:repositories base-package="org.skydingo.skybase.repository" />
		
	<tx:annotation-driven mode="proxy" />
	
	<context:component-scan base-package="org.skydingo.skybase.service.impl" />
	
	
	<!-- =========================================================================================================== -->
	<!-- Integrations                                                                                                -->
	<!-- =========================================================================================================== -->
	
	<bean class="org.springframework.social.github.connect.GitHubConnectionFactory">
		<constructor-arg value="${gitHub.oAuth.clientId}" />
		<constructor-arg value="${gitHub.oAuth.clientSecret}" />
	</bean>
	
	<!-- For web service calls (e.g., to GitHub, BitBucket, EC2, etc.) -->
	<!-- Use Spring Social for some of these -->
<!-- 	<bean class="org.springframework.web.client.RestTemplate" /> -->
	
	<bean class="org.springframework.social.github.api.impl.GitHubTemplate" />

	<!-- I don't need user connections... -->
	<!--
	<bean class="org.springframework.social.github.connect.GitHubConnectionFactory">
		<constructor-arg value="${github.clientId}" />
		<constructor-arg value="${github.clientSecret}" />
	</bean>
	-->
</beans>
